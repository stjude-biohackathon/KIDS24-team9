BootStrap: docker
From: ubuntu:20.04

%apprun Rscript
  exec Rscript "${@}"

%post
    apt-get update
    apt-get install -y --no-install-recommends \
        unzip git wget locales software-properties-common \
        dirmngr apt-utils build-essential openjdk-8-jdk \
        libcurl4-openssl-dev libssl-dev libxml2-dev \
        libcairo2-dev libxt-dev libopenblas-dev \
        cmake unzip bzip2 tar gzip pigz automake autotools-dev \
        libsigsegv2 m4 autoconf libfreetype6-dev libpng-dev \
        libtiff5-dev libjpeg-dev libharfbuzz-dev libfribidi-dev \
        python3 python3-pip nano vim \
        cpanminus perl

    # Set locale
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    locale-gen en_US.utf8
    /usr/sbin/update-locale LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8

    # Install R
    export R_VERSION=4.2.2
    echo "export R_VERSION=${R_VERSION}" >> $SINGULARITY_ENVIRONMENT
    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
    apt-get update
    apt-get install -y --no-install-recommends \
        r-base=${R_VERSION}* r-base-core=${R_VERSION}* \
        r-base-dev=${R_VERSION}* r-base-html=${R_VERSION}* \
        r-doc-html=${R_VERSION}*

    # Configure R repositories
    echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/lib/R/etc/Rprofile.site

    # Install additional R packages
    R --slave -e 'install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")'
    R --slave -e 'install.packages("BiocManager")'
    EXP="pak::pkg_install(c('devtools','ranger','multiclassPairs','mclust','preprocessCore','DESeq2','patchwork','pheatmap','switchBox','Rtsne','GGally','limma','ggrepel','cli','logger','openxlsx','fs','funr','readxl','readr','glue','tidyverse','rtracklayer','argparse','ggplot2','ggsci','formattable','circlize','kableExtra','logger','bookdown','bs4Dash','gt','pingr','trackViewer','csaw','tryCatchLog','reshape2','genomation','pander','BSgenome.Mmusculus.UCSC.mm10','BSgenome.Hsapiens.UCSC.hg38','TxDb.Mmusculus.UCSC.mm9.knownGene','TxDb.Mmusculus.UCSC.mm10.knownGene','org.Mm.eg.db','TxDb.Hsapiens.UCSC.hg19.knownGene','TxDb.Hsapiens.UCSC.hg38.knownGene','org.Hs.eg.db','TxDb.Scerevisiae.UCSC.sacCer3.sgdGene','org.Sc.sgd.db'))"
    R -e "$EXP"
    R --slave -e 'devtools::install_github("sirusb/kableExtra")'
    Rscript -e 'devtools::install_github(repo = "honzee/RNAseqCNV")'

    # Install Quarto
    mkdir tools
    wget -qO tools/quarto-1.2.94-linux-amd64.deb https://github.com/quarto-dev/quarto-cli/releases/download/v1.2.94/quarto-1.2.94-linux-amd64.deb
    dpkg -i tools/quarto-1.2.94-linux-amd64.deb
    quarto tools install tinytex  
    quarto tools install chromium

    # Install Python packages
    pip3 install matplotlib plotly_express click pandas rich seaborn scikit-learn openpyxl xlsxwriter xlrd jupyter jupyterlab jupyter-cache autoheaders

    # Install Bioinformatics tools

    ## STAR-2.7.9a
    cd /usr/local && \
    wget -q https://github.com/alexdobin/STAR/archive/refs/tags/2.7.9a.tar.gz -O star.tar.gz && \
    tar xzf star.tar.gz && \
    cd STAR-2.7.9a/source && make STAR && \
    cp STAR /usr/local/bin && rm /usr/local/star.tar.gz

    ## RSEM v1.3.3
    cd /usr/local && \
    wget https://github.com/deweylab/RSEM/archive/v1.3.3.tar.gz && \
    tar xzf v1.3.3.tar.gz && \
    cd RSEM-1.3.3 && make && make install

    ## Install Trim Galore v0.6.6
    cd /usr/local && \
    wget -q https://github.com/FelixKrueger/TrimGalore/archive/0.6.6.tar.gz -O trim_galore.tar.gz && \
    tar xzf trim_galore.tar.gz && \
    ln -s /usr/local/TrimGalore-0.6.6/trim_galore /usr/local/bin/trim_galore && \
    rm trim_galore.tar.gz

    ## FastQC v0.11.9
    cd /usr/local && \
    wget -q https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip && \
    unzip fastqc_v0.11.9.zip && \
    chmod 775 /usr/local/FastQC/fastqc && \
    ln -s /usr/local/FastQC/fastqc /usr/local/bin/fastqc && \
    rm fastqc_v0.11.9.zip    

    ## arriba v2.3.0
    cd /usr/local && \
    wget -q https://github.com/suhrig/arriba/releases/download/v2.3.0/arriba_v2.3.0.tar.gz && \
    tar -xzf arriba_v2.3.0.tar.gz && \
    cd arriba_v2.3.0 && make && \
    rm /usr/local/arriba_v2.3.0.tar.gz

    ## htslib
    cd /usr/local && \
    git clone --recurse-submodules https://github.com/samtools/htslib.git && \
    cd htslib && autoreconf -i && ./configure && make && make install

    ## samtools
    cd /usr/local && \
    git clone --recurse-submodules https://github.com/samtools/samtools.git && \
    cd samtools && autoheader && autoconf -Wno-syntax && ./configure && make && make install

    ## Install tabix
    cd /usr/local/ &&
    wget --no-check-certificate https://sourceforge.net/projects/samtools/files/tabix/tabix-0.2.6.tar.bz2 && \
    tar jxvf tabix-0.2.6.tar.bz2 && cd tabix-0.2.6 && make && \
    cp bgzip tabix /usr/local/bin/ && rm /usr/local/tabix-0.2.6.tar.bz2   

    # Install Fusion tools
    cd /usr/local && \
    git clone https://github.com/ndaniel/fusioncatcher && \
    cd fusioncatcher/tools/ && ./install_tools.sh

    # Clean up
    apt-get clean
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

%runscript
    exec /bin/bash "${@}"

%environment
   export LC_ALL=C
   export R_LIBS=/library:/usr/local/lib/R/site-library:/usr/lib/R/site-library:/usr/lib/R/library
   export PATH=/usr/local/bin:$PATH
   export PATH=/usr/local/fusioncatcher/bin:$PATH
